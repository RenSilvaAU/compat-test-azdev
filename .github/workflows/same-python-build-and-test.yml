name: Same Python Build and Test

on:
  workflow_dispatch:
    inputs:
      azdev_repo:
        description: 'Azure CLI Dev Tools repository (owner/repo)'
        required: true
        default: 'RenSilvaAU/azure-cli-dev-tools'
        type: string
      azdev_branch:
        description: 'Branch to test from azure-cli-dev-tools'
        required: true
        default: 'resilv/py313azdev'
        type: string
      aaz_dev_tools_repo:
        description: 'AAZ Dev Tools repository (owner/repo)'
        required: true
        default: 'RenSilvaAU/aaz-dev-tools'
        type: string
      aaz_dev_tools_branch:
        description: 'Branch to get requirements from aaz-dev-tools'
        required: true
        default: 'resilv/py313'
        type: string
      azure_cli_repo:
        description: 'Azure CLI repository (owner/repo)'
        required: true
        default: 'RenSilvaAU/azure-cli'
        type: string
      azure_cli_branch:
        description: 'Branch to get requirements from azure-cli'
        required: true
        default: 'resilv/py313cli'
        type: string

jobs:
  build-and-test-aaz-dev-tools:
    name: "aaz-dev-tools: Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        # [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9']
        # ['3.9', '3.10', '3.11', '3.12', '3.13']
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Echo test information
      run: |
        echo "=== Testing aaz-dev-tools with same Python version ==="
        echo "Azure CLI Dev Tools: ${{ github.event.inputs.azdev_repo }} (branch: ${{ github.event.inputs.azdev_branch }})"
        echo "AAZ Dev Tools: ${{ github.event.inputs.aaz_dev_tools_repo }} (branch: ${{ github.event.inputs.aaz_dev_tools_branch }})"
        echo "Building and testing with Python ${{ matrix.python-version }} on ${{ matrix.os }}"
        echo "============================================"
        
    - name: Checkout compatibility test repository
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Clone azure-cli-dev-tools
      run: |
        git clone https://github.com/${{ github.event.inputs.azdev_repo }}.git azure-cli-dev-tools
        cd azure-cli-dev-tools
        git checkout ${{ github.event.inputs.azdev_branch }}
        
    - name: Clone aaz-dev-tools
      run: |
        git clone https://github.com/${{ github.event.inputs.aaz_dev_tools_repo }}.git aaz-dev-tools
        cd aaz-dev-tools
        git checkout ${{ github.event.inputs.aaz_dev_tools_branch }}
        
    - name: Build azdev wheel
      run: |
        cd azure-cli-dev-tools
        python -m pip install --upgrade pip setuptools wheel build
        python -m build --wheel
        
    - name: Test aaz-dev-tools requirements (Unix)
      if: runner.os != 'Windows'
      run: |
        chmod +x scripts/test_aaz_unix.sh
        scripts/test_aaz_unix.sh ${{ matrix.python-version }} ${{ matrix.os }}
        
    - name: Test aaz-dev-tools requirements (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        scripts\test_aaz_windows.ps1 -PythonVersion "${{ matrix.python-version }}" -OSName "${{ matrix.os }}"

  build-and-test-azure-cli:
    name: "azure-cli: Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        # [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9']
        # ['3.9', '3.10', '3.11', '3.12', '3.13']
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Echo test information
      run: |
        echo "=== Testing azure-cli requirements with same Python version ==="
        echo "Azure CLI Dev Tools: ${{ github.event.inputs.azdev_repo }} (branch: ${{ github.event.inputs.azdev_branch }})"
        echo "Azure CLI: ${{ github.event.inputs.azure_cli_repo }} (branch: ${{ github.event.inputs.azure_cli_branch }})"
        echo "Building and testing with Python ${{ matrix.python-version }} on ${{ matrix.os }}"
        echo "============================================"
        
    - name: Checkout compatibility test repository
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Clone azure-cli-dev-tools
      run: |
        git clone https://github.com/${{ github.event.inputs.azdev_repo }}.git azure-cli-dev-tools
        cd azure-cli-dev-tools
        git checkout ${{ github.event.inputs.azdev_branch }}
        
    - name: Clone azure-cli
      run: |
        git clone https://github.com/${{ github.event.inputs.azure_cli_repo }}.git azure-cli
        cd azure-cli
        git checkout ${{ github.event.inputs.azure_cli_branch }}
        
    - name: Build azdev wheel
      run: |
        cd azure-cli-dev-tools
        python -m pip install --upgrade pip setuptools wheel build
        python -m build --wheel
        
    - name: Test azure-cli requirements (Unix)
      if: runner.os != 'Windows'
      run: |
        chmod +x scripts/test_azure_cli_unix.sh
        scripts/test_azure_cli_unix.sh ${{ matrix.python-version }} ${{ matrix.os }}
        
    - name: Test azure-cli requirements (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        scripts\test_azure_cli_windows.ps1 -PythonVersion "${{ matrix.python-version }}" -OSName "${{ matrix.os }}"
